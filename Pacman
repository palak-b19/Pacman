import java.awt.event.ActionListener;
import java.awt.event.ActinEvent;

public class Model extends JPanel implements ActionListener{
    private Dimension d;
    // defining playing area
    private final Font smallFont = new Font("Arial");
    private boolean inGame = false;
    //means if game has started 
    private boolean dying = false;

    private final int BLOCK_SIZE = 24;
    private final int N_BLOCKS = 15;
    private final int SCREEN_SIZE = N_BLOCKS * BLOCK_SIZE;
    private final int MAX_GHOSTS = 12;
    //enemies

    private int N_GHOSTS =6;
    private int lives,score;
    private int[] dx,dy;
    //position of the ghost
    private final int PACMAN_SPEED = 6;

    // private image heart,ghost;
    private Image heart,ghost;
    private Image up,down,left,right;
    //images

    private int pacman_x,pacman_y,pacmand_x,pacmand_y;
    //pacmand- delta changes in x and y direction
    private int req_dx, req_dy;
    // req_ defined ta_adapter

    private final int validSpeeds[]={1,2,3,4,6,8};
    private final int maxSpeed=6;
    private int currentSpeed=3;
    private short [] screenData;
    private Timer timer;

    private final short levelData[]={
        19,18,18,18,18,18,18,18,18,18,18,18,,18,18,22,
        17,17,17
    }
    //complete acc to level 
    // modify

    private Model(){
        loadIMages();
        initVARIABLES();
        addKeyListener(new TAdapter());
        setFocusable(true);
        initGame();
    }

    private void loadIMages(){
        down=
        up=
        left=
        right=
        ghost=
        heart=

    }

    private void initVariables(){
        screenData = new short[N_BLOCKS * N_BLOCKS];
        d= new Dimension(400,400);
        ghost_x= new int[MAX_GHOSTS];
        ghost_y = new int[MAX_GHOSTS];
        ghost_dx= new int[MAX_GHOSTS];
        ghost_dy= new int[MAX_GHOSTS];
        dx = new int[4];
        dy= new int[4];

    

    timer = new Timer(40,this);
    // timer shows how many times a particular image gets relodaded or similar
    // 400 means 400 times and so on
    //game redrawn evry 40 ms
    timer.restart();
    }

    class TAdapter extends KeyAdapter{
        public void KeyPressed(KeyEvent e){
            int key = e.getKeyCode();

            if (inGame){
                if(key==K)
            }
        }
    }




}
